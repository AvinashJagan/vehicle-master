---
swagger: "2.0"
info:
  description: "This is the Swagger specifiaction for PAR Compliance Portal to list out all the API's endpoints with their Request and Response Schemas along with the status codes and parameter type (path,body,query) "
  version: "1.0.0"
  title: "PAR Platinum Compliance"
  contact:
    name: "Property Asset Recovery"
    url: "https://dev.parplatinumcompliance.com/home"
    email: "info@parplatinumcompliance.com"
host: "devservices.parplatinumcompliance.com"
schemes:
- "https"
basePath: "/dev"
securityDefinitions:
  APIKey:
    type: apiKey
    name: x-access-token
    in: header
tags:
- name: "Users"
  description: "User Login API"
- name: "Regions"
  description: "Get Regions and States Information"
- name: "Dashboard"
  description: "Get dashboard details - PAR,Vendor,Client,MainDashboard"
- name: "Vendor"
  description: "searchvendors"
- name: "Document Types"
  description: "Get Document Types By Category"
- name: "Vendor-Employee"
  description: "Add,Delete,Update,Get Vendor employees"
- name: "Vendor-Employee Documents"
  description: "Add,Delete,Update,Get Vendor employee Documents"
- name: "Vendor-Location Documents"
  description: "Add,Delete,Update,Get Vendor location Documents"
- name: "Vendor-License Documents"
  description: "Add,Delete,Update,Get Vendor license Documents"
- name: "Vendor-Insurance Documents"
  description: "Add,Delete,Update,Get Vendor Insurance Documents"
- name: "Vendor-DueDiligence Documents"
  description: "Add,Delete,Update,Get Vendor DueDiligence Documents"
- name: "Vendor-State Requirements"
  description: "Vendor State Requirements"
- name: "Upload-Document"
  description: "Upload a document"
- name: "Download-Document"
  description: "Download a document"
- name: "PAR-Insurance Documents"
  description: "Add,Delete,Update,Get Vendor Insurance Documents"
- name: "PAR-Employee"
  description: "Add,Delete,Update,Get PAR Employee Details"
- name: "PAR-Employee Documents"
  description: "Add,Delete,Update,Get PAR Employee Documents"
- name: "PAR-License Documents"
  description: "Add,Delete,Update,Get PAR License Documents"
- name: "PAR-DueDiligence Documents"
  description: "Add,Delete,Update,Get PAR DueDiligence Documents"
- name: "Change Logs"
  description: "Add,Get Change Log Details"
- name: "User Management"
  description: "Add User,Get All Users,Delete User,Edit User,Block User"
- name: "Scheduler"
  description: "Scheduler that runs at certain frequencies"
- name: "PAR-Summary"
  description: "Summary Details of PAR"


consumes:
- "application/json"
produces:
- "application/json"
paths:
  /region:
    get:
      tags:
      - "Regions"
      security:
        - APIKey: []
      summary: "Get All Regions"
      description: "Get the list of all Regions from the Database - This Region list gives regionId along with their states codes and states names.Generally this API is used to list down the all RegionId's and this region info can be consumed"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getregion_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found
  /states:
    get:
      tags:
      - "Regions"
      security:
        - APIKey: []
      summary: "Get All States with their Code"
      description: "Get the list of all States from the Database - The information contains all the states with their State Code and State Name"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/states_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found
  /vendor/search:
    post:
      tags:
      - "Vendor"
      security:
        - APIKey: []
      summary: "vendor search api"
      description: "The system search for vendor based on vendor ID, vendor name, state, postal code and region - Here we should pass request fields to get the vendor details which are available in the system.Here the api is conumed as a filter parameter if name and postal code were given then the system checks for the vendor with the postal code which is passed or else the system generated empty array which indicates that there were no vendor available with the search criteria"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: SearchTerms
          in: body
          required: true
          description: Vendor search parameters
          schema:
            $ref: "#/definitions/searchvendors_request"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/searchvendors_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /vendor/{vendor_id}/info:
    post:
      tags:
      - "Vendor"
      security:
        - APIKey: []
      summary: "Update Vendor Additional Information"
      description: "The system updates vendor additional information"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          type: integer
          required: true
          description: Enter Vendor ID
        - name: AdditionalInfo
          in: body
          required: true
          description: Enter vendor additional information
          schema:
            $ref: "#/definitions/vendoradditionalinfo_request"
      deprecated: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /vendor/{vendor_id}/dashboard:
    get:
      tags:
      - "Dashboard"
      security:
        - APIKey: []
      summary: Get Vendor Dashboard Information
      description: "This Dashboard information shows that Vendor is Platinum Compliant or Not , It Also gives a list of different documents that vendor need to submit "
      operationId: ""
      parameters:
        - in: path
          name: vendor_id
          description: Enter Vendor ID 
          type: integer
          default: 1
          required: true
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/vendordashboard_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /mainDashboard/getdocuments:
    get:
      tags:
      - "Dashboard"
      security:
        - APIKey: []
      summary: Get Vendor Main Dashboard Details 
      description: "This API gives the list of documents that are going to expire in 7 days with respect to Platinum type - Platinum / NonPlatinum - Here API also uses filters to get the list of documents that are based on region ID that was given, so the system will get documents related to that particular Region vendor documents"
      operationId: ""
      parameters:
        - in: query
          description: Select platinum type --> ( Y indicates PlatinumCompliant list , N indicates NonPlatinumCompliant list )
          type: string
          name : platinum
          enum: [ Y , N ]
          default: Y
          required: true
        - in: query
          description: Select Platinum Type 
          type: integer
          name : regionid
          enum: [ 1,2,3,4,5,6,7 ]
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/vendordashboard_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /vendor/{vendor_id}:
    get:
      tags:
      - "Vendor"
      security:
        - APIKey: []
      summary: Get Vendor Details
      description: Enter vendorId to display their information
      operationId: ""
      parameters:
        - in: path
          name: vendor_id
          description: Enter Vendor ID 
          type: integer
          default: 68
          required: true
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/vendordetails_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /vendor/vendor:
    post:
      tags:
      - "Vendor"
      summary: "Add New Vendor"
      description: "The system adds new vendor details"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

      deprecated: true

  /vendor/{vendor_id}/locations:
     get:
      tags:
      - "Vendor"
      security:
        - APIKey: []
      summary: Get Vendors Locations Details
      description: Enter vendorId to display their location information
      operationId: ""
      parameters:
        - in: path
          name: vendor_id
          description: Enter Vendor ID 
          type: integer
          default: 1
          required: true
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /location/{location_id}:
    get:
      tags:
      - "Vendor"
      security:
        - APIKey: []
      summary: Get Vendors Location Summary Details
      description: Enter vendorId to display their location summary information
      operationId: ""
      parameters:
        - in: path
          name: location_id
          description: Enter Location ID 
          type: integer
          default: 12423
          required: true
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/vendorslocations_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
   
    # put:
    #   tags:
    #   - "Vendor"
    #   security:
    #     - APIKey: []
    #   summary: "Add Additional Location Info"
    #   description: "The system adds additional location details"
    #   operationId: ""
    #   consumes:
    #   - "application/json"
    #   produces:
    #   - "application/json"
    #   parameters:
    #     - name: location_id
    #       in: path
    #       required: true
    #       description: Enter Location ID
    #     - name: AddLocationDetails
    #       in: body
    #       required: true
    #       description: Enter Additional Location Details
    #       schema:
    #         $ref: "#/definitions/addadditionallocation_request"
    #   responses:
    #     200:
    #       description: Success
    #     400:
    #       description: Bad Request
    #     401:
    #       description: Unauthorized error
    #     500:
    #       description: Internal Server Error

  /documents/GetDocumentTypesByCategory:
    get:
      tags:
      - "Document Types"
      security:
        - APIKey: []
      summary: Get Document types by Category
      description: Enter Category to display its Document types - If you are about to get list of documents that are related to insurance then we need to pass query value with INSURANCE , so the system will fetch all the documents that are related to Insurance (Vendor Insurance)
      operationId: ""
      parameters:
        - in: query
          name: Category
          description: Select Document Type Category
          type: string
          required: true
          enum: [ AGENTEMPLOYEE , LICENSE , LOCATION , INSURANCE , DUEDILIGENCE , PAREMPLOYEE , PARINSURANCE , PARLICENSE , PARDUEDILIGENCE ]
          default: "LICENSE"
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/documenttypes_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /documents/GetCategoryByRoleValue:
    get:
      tags:
      - "Document Types"
      security:
        - APIKey: []
      summary: Get category types by role value
      description: Enter role values to get the categories - Here roleValue indicates the PAR or Vendor side documents i.e if roleVale = 1 then System recognize and it will Get Vendor Side Docuemnts list , and if roleValue = 2 then system will returns PAR side documents
      operationId: ""
      parameters:
        - in: query
          name: roleValue
          description: Enter role values to display its category types (1=Vendor , 2=PAR)
          type: integer
          required: true
          default: 1
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/documenttypes_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  
  /vendors/employee:
    post:
      tags:
      - "Vendor-Employee"
      security:
        - APIKey: []
      summary: "Adding a new Vendor Employee"
      description: "Adding a new Vendor Employee for an Vendor"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddVendor-Employee
          in: body
          required: true
          description: Vendor Vendor Employee
          schema:
            $ref: "#/definitions/addvendoremployee_request"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/addvendoremployee_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

  /vendor/{vendor_id}/employee:
    get:
      tags:
      - "Vendor-Employee"
      security:
        - APIKey: []
      summary: "Get All Vendor Employees"
      description: "Get the list of all VendorEmployees for particular Vendor"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: vendor_id
          type: integer
          default: 68
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getvendoremployees_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not 
          
  /vendors/employee/{doc_id}:
    get:
      tags:
      - "Vendor-Employee"
      security:
        - APIKey: []
      summary: "Get Vendor Employee Details"
      description: "Get the list of all VendorEmployees for particular Vendor"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: doc_id
          description: "Enter the Vendor Employee ID (Object ID)"
          type: string
          default: "5b3f6e6d9d1e0abf801f5422"
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getvendoremployees_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

    put:
      tags:
      - "Vendor-Employee"
      security:
        - APIKey: []
      summary: "Update Vendor Employee Details"
      description: "Update VendorEmployee details of particular Employee"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          type: string
          required: true
          description: Enter document id of Vendor Employee
          default : "5b3f6e6d9d1e0abf801f5422"
        - name: UpdateVendorEmployeeDetails
          in: body
          required: true
          description: Update Vendor employee details based on unique _id 
          schema:
            $ref: "#/definitions/updatevendoremployee_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

    delete:
      tags:
      - "Vendor-Employee"
      security:
        - APIKey: []
      summary: "Delete Vendor Employee"
      description: "Delete VendorEmployee from the vendor employee list"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          type: string
          required: true
          description: Delete Vendor employee based on unique _id 
          default: "5b3f6e6d9d1e0abf801f5422"
          # schema:
          #   $ref: "#/definitions/deletevendoremployee_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

  # /user/signup:
  #   post:
  #     tags:
  #     - "Users"
  #     security:
  #       - APIKey: []
  #     summary: Sign up PAR employee users
  #     description: System verifies information and creates account
  #     operationId: ""
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     parameters:
  #       - name: userInformation
  #         in: body
  #         required: true
  #         description: User information to sign up
  #         schema:
  #           $ref: "#/definitions/userRequest"
  #     responses:
  #       200:
  #         description: "User Registered Successfully"
  #       400:
  #         description: Bad Request
  #       500:
  #         description: Internal Server Error
  # /user/getemployees:
  #   get:
  #     tags:
  #     - "Users"
  #     security:
  #       - APIKey: []
  #     summary: Get list of PAR employee's user information
  #     description: System retrieves the list of PAR employees
  #     operationId: ""
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     responses:
  #       200:
  #         description: "Success"
  #         schema:
  #           $ref: "#/definitions/getemployees_response_200"
  #       400:
  #         description: Bad Request
  #       500:
  #         description: Internal Server Error
  /login:
    post:
      tags:
      - "Users"
      summary: Login API for PAR Application
      description: System verifies information and authenticates the user
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: userLoginInformation
          in: body
          required: true
          description: User information to Login
          schema:
            $ref: "#/definitions/loginUserRequest"
      responses:
        200:
          description: "User Logged In Successfully"
          schema:
            $ref: "#/definitions/loginUser_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
        404:
          description: Please Enter all the Detials

  /vendors/employees/documents:
    post:
      tags:
      - "Vendor-Employee Documents"
      security:
        - APIKey: []
      summary: "Add Vendor Employee Document"
      description: "Add Vendor Employee Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddVendorEmployeeDocuments
          in: body
          required: true
          description: Add Vendor employee document
          schema:
            $ref: "#/definitions/addvendoremployeedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

  /vendors/employee/all/{employee_id}:
    get:
      tags:
      - "Vendor-Employee Documents"
      security:
        - APIKey: []
      summary: Get list of Vendor Employee Documents
      description: System retrieves the list of Vendor employee Documents
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: employee_id
          in: path
          description: Enter the Employee ID
          required: true
          type: integer
          default: 1
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getvendoremployeedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /vendors/employees/document/{doc_id}:
    get:
      tags:
      - "Vendor-Employee Documents"
      security:
        - APIKey: []
      summary: Get particular Document details
      description: System retrieves the details employee Document based on unique document id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the document id 
          required: true
          type: string
          default: "5b365d59447e1a4aac640ec7"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getvendoremployeedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error


    put:
      tags:
      - "Vendor-Employee Documents"
      security:
        - APIKey: []
      summary: Update Vendor Employee Document
      description: Update vendor employee document
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter document Id
          default : "5b365d59447e1a4aac640ec7"
        - name: updatedocument
          in: body
          required: true
          description: Enter document details to update
          schema:
            $ref: "#/definitions/updatevendoremployeedocument"
      responses:
        200:
          description: "User Registered Successfully"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    delete:
      tags:
      - "Vendor-Employee Documents"
      security:
        - APIKey: []
      summary: "Delete Vendor Employee Document"
      description: "Soft Delete Vendor Employee Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Delete Vendor employee document
          default: "5b365d59447e1a4aac640ec7"
          # schema:
          #   $ref: "#/definitions/deletevendoremployeedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
        404:
          description: Not Found

  /locations/documents:
    post:
      tags:
      - "Vendor-Location Documents"
      security:
        - APIKey: []
      summary: "Add Location Documents"
      description: "The system adds location documents for vendor based on location ID"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddLocationDocuments
          in: body
          required: true
          description: Enter Location Document Details 
          schema:
            $ref: "#/definitions/addlocationdocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /location/{location_id}/documents:
    get:
      tags:
      - "Vendor-Location Documents"
      security:
        - APIKey: []
      summary: Get all Document details of particular Location
      description: System retrieves the all Documents of particular Location based on location id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: location_id
          in: path
          description: Enter the location id 
          required: true
          type: integer
          default: 1769
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /locations/document/{document_id}:
    get:
      tags:
      - "Vendor-Location Documents"
      security:
        - APIKey: []
      summary: Get particular location document details 
      description: System retrieves the particular location document details based on object id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: document_id
          in: path
          description: Enter the document id
          required: true
          type: string
          default: "5b352722849c46001a3e125e"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  

    put:
      tags:
      - "Vendor-Location Documents"
      security:
        - APIKey: []
      summary: Update particular location document details 
      description: System updates the particular location document details based on object id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: document_id
          in: path
          description: Enter the document id
          required: true
          type: string
          default: "5b352722849c46001a3e125e"
        - name: UpdateLocationDocument
          in: body
          description: Enter the document details
          schema:
            $ref: "#/definitions/updatelocationdocument_request"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error


    delete:
      tags:
      - "Vendor-Location Documents"
      security:
        - APIKey: []
      summary: Delete particular location document details 
      description: System soft deletes the particular location document details based on object id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: document_id
          in: path
          description: Enter the document id
          required: true
          type: string
          default: "5b365ad494adfc2d3cc493d6"
        # - name: DeleteLocationDocument
        #   in: body
        #   description: Enter the documentId (_id)
          # schema:
          #   $ref: "#/definitions/deletelocationdocument_request"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
 
  /vendors/license:
    post:
      tags:
      - "Vendor-License Documents"
      security:
        - APIKey: []
      summary: "Add Vendor License Document"
      description: "The system adds vendor license documents"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddLicenseDocument
          in: body
          required: true
          description: Enter License document details 
          schema:
            $ref: "#/definitions/addvendorlicensedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /vendor/{vendor_id}/license:
    get:
      tags:
      - "Vendor-License Documents"
      security:
        - APIKey: []
      summary: Get all license documents of particular vendor 
      description: System retrieves all license documents of vendorId
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          description: Enter the Vendor ID
          required: true
          type: integer
          default: 68
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getalllicensedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /vendors/license/document/{doc_id}:
    get:
      tags:
      - "Vendor-License Documents"
      security:
        - APIKey: []
      summary: Get particular license document details 
      description: System retrieves particular license document details based on document Object id
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the Vendor License Document Id (Object ID)
          required: true
          type: string
          default: "5b6ad2bb7ae78c16a05cd9b1"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getalllicensedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    put:
      tags:
      - "Vendor-License Documents"
      security:
        - APIKey: []
      summary: "Update Vendor License Document"
      description: "The system updates vendor license document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the Vendor License Document Id (Object ID)
          required: true
          type: string
          default: "5b6ad2bb7ae78c16a05cd9b1"
        - name: UpdateLicenseDocument
          in: body
          required: true
          description: Enter License document details 
          schema:
            $ref: "#/definitions/updatevendorlicensedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    delete:
      tags:
      - "Vendor-License Documents"
      security:
        - APIKey: []
      summary: "Delete Vendor License Document"
      description: "The system soft deletes vendor license document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter License document ID  
          default : "5b6ad2bb7ae78c16a05cd9b1"
          # schema:
          #   $ref: "#/definitions/deletevendorlicensedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  # /vendors/insurances/documents/type:
  #   get:
  #     tags:
  #     - "Vendor-Insurance Documents"
  #     security:
  #       - APIKey: []
  #     summary: Get List of vendor insurance document-types
  #     description: System retrieves all vendor insurance document-types
  #     operationId: ""
  #     consumes:
  #     - "application/json"
  #     produces:
  #     - "application/json"
  #     responses:
  #       200:
  #         description: "Success"
  #       400:
  #         description: Bad Request
  #       500:
  #         description: Internal Server Error
  /vendors/insurance:
    post:
      tags:
      - "Vendor-Insurance Documents"
      security:
        - APIKey: []
      summary: "Add Vendor Insurance Document"
      description: "The system adds vendor insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddInsuranceDocument
          in: body
          required: true
          description: Enter Insurance document details
          schema:
            $ref: "#/definitions/addinsurancedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /vendor/{vendor_id}/insurances:
    get:
      tags:
      - "Vendor-Insurance Documents"
      security:
        - APIKey: []
      summary: Get List of insurance documents of particular Vendor 
      description: System retrieves all insurance documents 
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          description: Enter the Vendor ID
          required: true
          type: integer
          default: 68
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /vendors/insurances/document/{doc_id}:
    get:
      tags:
      - "Vendor-Insurance Documents"
      security:
        - APIKey: []
      summary: Get particular insurance document details 
      description: System retrieves particular insurance document details based on Object ID  
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the VendorInsurance ID
          required: true
          type: string
          default: "5b6ae69c81d0470adcec4b5b"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /vendor/{vendor_id}/insurance/{ins_id}:
    post:
      tags:
      - "Vendor-Insurance Documents"
      security:
        - APIKey: []
      summary: "Update Vendor Insurance Document"
      description: "The system updates vendor insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          description: Enter the Vendor ID
          required: true
          type: integer
        - name: ins_id
          in: path
          description: Enter the Insurance ID
          required: true
          type: integer
        - name: UpdateInsuranceDocument
          in: body
          required: true
          description: Enter Insurance document details to Update
          schema:
            $ref: "#/definitions/updateinsurancedocument_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    put:
      tags:
      - "Vendor-Insurance Documents"
      security:
        - APIKey: []
      summary: "Delete Vendor Insurance Document"
      description: "The system soft deletes vendor insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          description: Enter Vendor ID
          required: true
          type: string
        - name: ins_id
          in: path
          description: Enter Insurance ID
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /dueDiligence:
    post:
      tags:
      - "Vendor-DueDiligence Documents"
      security:
        - APIKey: []
      summary: "Add Vendor DueDiligence Document"
      description: "The system adds duediligence document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddDueDiligenceDocument
          in: body
          required: true
          description: Enter DueDiligence document details
          schema:
            $ref: "#/definitions/addduediligencedocument_request"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/addduediligencedocument_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /dueDiligence/document/{doc_id}:
    delete:
      tags:
      - "Vendor-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Delete particular DueDiligence document 
      description: System soft deletes particular DueDiligence document based on Object ID  
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the Document ID
          required: true
          type: string 
          default: ""
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    put:
      tags:
      - "Vendor-DueDiligence Documents"
      security:
        - APIKey: []
      summary: "Update Vendor DueDiligence Document"
      description: "The system updates duediligence document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type : string
          description: Enter DueDiligence document details to Update
          # schema:
          #   $ref: "#/definitions/updateduediligencedocument_request"
      responses:
        200:
          description: Success
          # schema:
          #   $ref: "#/definitions/updateduediligencedocument_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
    get:
      tags:
      - "Vendor-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Get particular DueDiligence document details 
      description: System retrieves particular DueDiligence document details based on Object ID  
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the Vendor-DueDiligence Dcument ID (Object ID)
          required: true
          type: string
          default: "5b36735408b972582818b859"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /DueDiligence/vendor/{vendor_id}:
    get:
      tags:
      - "Vendor-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Get particular DueDiligence document details 
      description: System retrieves particular DueDiligence document details based on Object ID  
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: vendor_id
          in: path
          description: Enter the Vendor ID
          required: true
          type: integer
          default: 68
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /StateRequirements:
     post:
      tags:
      - "Vendor-State Requirements"
      security:
        - APIKey: []
      summary: "Add Vendor State Requirements"
      description: "The system adds state requirements for an vendor"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddStateRequirements
          in: body
          required: true
          description: Enter State Requirements details
          schema:
            $ref: "#/definitions/addstaterequirements_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /StateRequirements/{StateCode}:
    get:
      tags:
      - "Vendor-State Requirements"
      security:
        - APIKey: []
      summary: Get state requirements based on particular state code 
      description: System retrieves requirements based on particular state code  
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: StateCode
          in: path
          description: Enter the State Code
          required: true
          type: string
          default: "AL"
      responses:
        200:
          description: "Success"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    put:
      tags:
      - "Vendor-State Requirements"
      security:
        - APIKey: []
      summary: "Update Vendor State Requirements"
      description: "The system updates state requirements for an vendor"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: StateCode
          in: path
          description: Enter the State Code
          required: true
          type: string
          default: "AL"
        - name: UpdateStateRequirements
          in: body
          required: true
          description: Enter State Requirements details
          schema:
            $ref: "#/definitions/updatestaterequirements_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /Upload:
     post:
      tags:
      - "Upload-Document"
      summary: "Upload a document"
      description: "The system accepts a document and uploads it to the cloud"
      consumes:
      - multipart/form-data
      produces:
      - "application/json"
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: filename
          type: string
          required: true
          description: filename
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  
  /Download:
    get:
      tags:
      - "Download-Document"
      summary: "Download a document"
      description: "The system accepts a filePath and downloads the document from the cloud"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: filePath
          in: query
          description: Enter the filePath to fetch the document
          required: true
          type: string
          default: Vendor/182/duediligence/AGT_W9F/2018-06-29T19:20:03.232Z/2018-06-05_15-39-38.png
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /par/insurance:
    post:
      tags:
      - "PAR-Insurance Documents"
      security:
        - APIKey: []
      summary: "Add PAR Insurance Document"
      description: "The system adds insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddPARInsuranceDocument
          in: body
          required: true
          description: Enter Insurance document details
          schema:
            $ref: "#/definitions/addparinsurance_request"
      responses:
        200:
          description: Insurance Document Created Successful
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    get:
      tags:
      - "PAR-Insurance Documents"
      security:
        - APIKey: []
      summary: Get all PAR insurance documents 
      description: System retrieves all insurance documents 
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getallparinsurancedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /par/insurance/document/{doc_id}:
    get:
      tags:
      - "PAR-Insurance Documents"
      security:
        - APIKey: []
      summary: Get particular PAR insurance document details
      description: System retrieves particular par insurance document details 
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        description: Enter the Document Id
        required: true
        type: string
        default: "5b46148d6596a62248afa36b"  
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getparinsurancedoc_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    put:
      tags:
      - "PAR-Insurance Documents"
      security:
        - APIKey: []
      summary: "Update PAR Insurance Document"
      description: "The system updates insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          description: Enter the Document Id
          required: true
          type: string
          default: "5b46148d6596a62248afa36b"  
        - name: UpdatePARInsuranceDocument
          in: body
          required: true
          description: Enter Insurance document details to update
          schema:
            $ref: "#/definitions/updateparinsurance_request"
      responses:
        200:
          description: Insurance Document Updated Successful
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
    delete:
      tags:
      - "PAR-Insurance Documents"
      security:
        - APIKey: []
      summary: "Delete PAR Insurance Document"
      description: "The system soft deletes insurance document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter Insurance document ID 
          default : "5b4616ab5ab9780fb0005d13"
      responses:
        200:
          description: Insurance Document Deleted
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error


  /par/employee:
    post:
      tags:
      - "PAR-Employee"
      security:
        - APIKey: []
      summary: "Add PAR Employee"
      description: "The system adds PAR employee"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddPAREmployee
          in: body
          required: true
          description: Enter PAR Employee details
          schema:
            $ref: "#/definitions/addparemployee_request"
      responses:
        200:
          description: PAR Employee Created
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    get:
      tags:
      - "PAR-Employee"
      security:
        - APIKey: []
      summary: Get all PAR Employees 
      description: System retrieves all PAR employees 
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getallparemployees_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /par/employees/{doc_id}:
    get:
      tags:
      - "PAR-Employee"
      security:
        - APIKey: []
      summary: Get particular PAR Employee Details 
      description: System retrieves particular PAR employee Details
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Employee Object ID 
        default : "5b4893e2448d4e3210f7b310"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getparemployeebyid_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    put:
      tags:
      - "PAR-Employee"
      security:
        - APIKey: []
      summary: "Update PAR Employee"
      description: "The system Updates PAR employee details"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter Employee Object ID 
          default : "5b4893e2448d4e3210f7b310"
        - name: UpdatePAREmployee
          in: body
          required: true
          description: Enter PAR Employee details to Update
          schema:
            $ref: "#/definitions/updateparemployee_request"
      responses:
        200:
          description: Employee Data Upadated Successful
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    delete:
      tags:
      - "PAR-Employee"
      security:
        - APIKey: []
      summary: Delete PAR Employee from the list
      description: System soft deletes particular PAR employee from the list
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Employee Object ID 
        default : "5b4893e2448d4e3210f7b310"
      responses:
        200:
          description: "Employee Data Deleted Successful"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/license:
    post:
      tags:
      - "PAR-License Documents"
      security:
        - APIKey: []
      summary: "Add PAR License"
      description: "The system adds PAR License Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddPARLicense
          in: body
          required: true
          description: Enter License details
          schema:
            $ref: "#/definitions/addparlicense_request"
      responses:
        200:
          description: PAR Employee Created
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    get:
      tags:
      - "PAR-License Documents"
      security:
        - APIKey: []
      summary: Get all PAR License Documents 
      description: System retrieves all PAR License Documents
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getallparlicensedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/license/document/{doc_id}:
    get:
      tags:
      - "PAR-License Documents"
      security:
        - APIKey: []
      summary: Get particular License Document Details
      description: System retrieves particular PAR License Document Details
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter License Document ID 
        default : "5b4cd1883f932f3b5c644309"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getparlicensedoc_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    put:
      tags:
      - "PAR-License Documents"
      security:
        - APIKey: []
      summary: "Update PAR License Document"
      description: "The system updates PAR License Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter License Document ID 
          default : "5b4cd1883f932f3b5c644309"
        - name: UpdatePARLicense
          in: body
          required: true
          description: Enter License details
          schema:
            $ref: "#/definitions/updateparlicense_request"
      responses:
        200:
          description: PAR Employee Created
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    delete:
      tags:
      - "PAR-License Documents"
      security:
        - APIKey: []
      summary: Delete particular License Document Details
      description: System soft deletes particular PAR License Document
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter License Document ID 
        default : "5b4cd1883f932f3b5c644309"
      responses:
        200:
          description: "License Document Deleted"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/employees/documents:
    post:
      tags:
      - "PAR-Employee Documents"
      security:
        - APIKey: []
      summary: "Add PAR Employee Document"
      description: "The system adds PAR Employee Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddPAREmployeeDocument
          in: body
          required: true
          description: Enter Document details
          schema:
            $ref: "#/definitions/addparemployeedoc_request"
      responses:
        200:
          description: PAR Employee Created
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

  /par/employee/{employee_id}/documents:
    get:
      tags:
      - "PAR-Employee Documents"
      security:
        - APIKey: []
      summary: Get all PAR Employee Documents 
      description: System retrieves all PAR Employee Documents
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: employee_id
        in: path
        required: true
        type: string
        description: Enter Employee ID 
        default : 5
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getallparemployeedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/employees/document/{doc_id}:
    get:
      tags:
      - "PAR-Employee Documents"
      security:
        - APIKey: []
      summary: Get particular Employee Document Details
      description: System retrieves particular PAR Employee Document Details
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Document ID 
        default : "5b4f121bf312161b4062727d"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getparemployeedoc_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    put:
      tags:
      - "PAR-Employee Documents"
      security:
        - APIKey: []
      summary: "Update PAR Employee Document"
      description: "The system updates PAR Employee Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter Document ID 
          default : "5b4f121bf312161b4062727d"
        - name: UpdatePAREmployeeDocument
          in: body
          required: true
          description: Enter Docuement details
          schema:
            $ref: "#/definitions/updateparemployeedoc_request"
      responses:
        200:
          description: Document Updated Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    delete:
      tags:
      - "PAR-Employee Documents"
      security:
        - APIKey: []
      summary: Delete particular Employee Document
      description: System soft deletes particular PAR Document
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Document ID 
        default : "5b4f1233f312161b4062727e"
      responses:
        200:
          description: "Employee Documented Deleted"
        400:
          description: Bad Request (Employee Documented not Deleted)
        500:
          description: Internal Server Error
          
  /changelogs:
    get:
      tags:
      - "Change Logs"
      security:
        - APIKey: []
      summary: Get api logs by document type
      description: Enter document type to get logs of the particular Category Documents
      operationId: ""
      parameters:
        - in: query
          name: documentType
          description: Enter document type
          type: string
          required: true
          default: "OFAC"
        - in: query
          name: vendorId
          description: Enter VendorID
          type: integer
          required: true
          default: 1
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/documenttypes_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  
  /logDetails:
    post:
      tags:
      - "Change Logs"
      security:
        - APIKey: []
      summary: post api to add logs
      description: post api to add logs 
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: log parameters
          in: body
          required: true
          description: logging parameters
          schema:
            $ref: "#/definitions/changelogs_request"
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error


  /par/duediligence:
    post:
      tags:
      - "PAR-DueDiligence Documents"
      security:
        - APIKey: []
      summary: "Add DueDiligence Document"
      description: "The system adds DueDiligence Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: AddDueDiligenceDocument
          in: body
          required: true
          description: Enter Document details
          schema:
            $ref: "#/definitions/addparduediligence_request"
      responses:
        200:
          description: Created Document Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    get:
      tags:
      - "PAR-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Get All PAR DueDiligence Documents 
      description: System retrieves all due diligence documents
      operationId: ""          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getallpardueligencedocs_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/duediligence/document/{doc_id}:
    get:
      tags:
      - "PAR-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Get particular PAR DueDiligence Document details 
      description: System retrieves particular due diligence document details
      operationId: ""
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Document ID
        default: "5b58b2c144672137f4b567da"
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getpardueligencedoc_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

    put:
      tags:
      - "PAR-DueDiligence Documents"
      security:
        - APIKey: []
      summary: "Update DueDiligence Document"
      description: "The system updates DueDiligence Document"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: doc_id
          in: path
          required: true
          type: string
          description: Enter Document ID
          default: "5b58b2c144672137f4b567da"
        - name: UpdateDueDiligenceDocument
          in: body
          required: true
          description: Enter Document details
          schema:
            $ref: "#/definitions/updateparduediligence_request"
      responses:
        200:
          description: Updated Document Successfully
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error

    delete:
      tags:
      - "PAR-DueDiligence Documents"
      security:
        - APIKey: []
      summary: Delete particular PAR DueDiligence Document from the list 
      description: System soft deletes particular due diligence document from the list
      operationId: ""
      parameters:
      - name: doc_id
        in: path
        required: true
        type: string
        description: Enter Document ID
        default: "5b58b2c144672137f4b567da"
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/getpardueligencedoc_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /par/dashboard:
    get:
      tags:
      - "Dashboard"
      security:
        - APIKey: []
      summary: Get PAR Dashboard Information
      description: "This Dashboard information shows the list of PAR documents that are uploaded and missing"
      operationId: ""
          
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
          # schema:
          #   $ref: "#/definitions/vendordashboard_response_200"
        400:
          description: Bad Request
        500:
          description: Internal Server Error
          
          
  /getusers:
    get:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Get All Available Users"
      description: "This API will give the list of registered users"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getusers_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        403:
          description: Forbidden
        500:
          description: Internal Server Error
        404:
          description: Not Found
  /adduser:
    post:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Add New User into the System"
      description: "The system adds/registers new user into the system and on successful creation of user, the registered user will get a mail regarding Credentials userid and password"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: AddNewUser
          in: body
          required: true
          description: Enter user Details
          schema:
            $ref: "#/definitions/add_user_request"
      responses:
        200:
          description: User Created and Password sent to registered Email
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
          
  /getuserdetails/{docid}:
    get:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Get Particular User Information"
      description: "The system retrieves particular User information"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: docid
          in: path
          required: true
          type: string
          description: Enter Doc ID
      responses:
        200:
          description: User Info Updated
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
  /edituser/{docid}:
    put:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Edit User Information"
      description: "The system edits existing user information "
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: docid
          in: path
          required: true
          type: string
          description: Enter Doc Id
      
        - name: EditUserDetails
          in: body
          required: true
          description: Enter user Details
          schema:
            $ref: "#/definitions/edit_user_request"
      responses:
        200:
          description: User Info Updated
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server 
          
  /deleteuser/{docid}:
    delete:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Delete User"
      description: "The system soft deletes particular user"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: docid
          in: path
          required: true
          type: string
          description: Enter Doc ID
      
      responses:
        200:
          description: User Deleted 
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server 
          
  /forgotpassword:
    post:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Reset Password/Forgot Password"
      description: "Enter valid emailID to get reset password link"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
      
        - name: ForgotPassword
          in: body
          required: true
          description: Enter Email ID
          schema:
            $ref: "#/definitions/forgot_password_request"
      responses:
        200:
          description: New Password sent to registered email
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server 
  /changepassword:
    post:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Reset Password/Forgot Password"
      description: "Enter valid emailID to get reset password link"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: userid
          in: query
          required: true
          type: string
          description: Enter User Doc Id
          default: "5bbddce13f3b77657846bdb6"
          
        - name: PasswordDetails
          in: body
          required: true
          description: Enter Old Password and new password to reset 
          schema:
            $ref: "#/definitions/change_password_request"
        
      responses:
        200:
          description: New Password sent to registered email
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server
          
  /getroles:
    get:
      tags:
      - "User Management"
      security:
        - APIKey: []
      summary: "Get Different Roles Available in the System"
      description: "This API will get the list of roles that are available to assign a new user"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/getroles_response_200"
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        403:
          description: Forbidden
        500:
          description: Internal Server Error
        404:
          description: Not Found
          
  /scheduler:
    get:
      tags:
      - "Scheduler"
      summary: "Scheduler API that runs in background"
      description: "This Scheduler API runs in background everytime at certain frequencies , so that Platinum Compliant Agents docuemnts will be monitored and if any of the document is expired or not reaching to platinum criteria then it updated PlatinumCompliant Flag/marking the vendor to Non Platinum compliant"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Updated Vendor Compliance List
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
          
          
  /par/summary:
    get:
      tags:
      - "PAR-Summary"
      security:
        - APIKey: []
      summary: "Scheduler API that runs in background"
      description: "This Scheduler API runs in background everytime at certain frequencies , so that Platinum Compliant Agents docuemnts will be monitored and if any of the document is expired or not reaching to platinum criteria then it updated PlatinumCompliant Flag/marking the vendor to Non Platinum compliant"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: Updated Vendor Compliance List
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server Error
          
    put:
      tags:
      - "PAR-Summary"
      security:
        - APIKey: []
      summary: "Update Summary Details"
      description: "Edit Summary Details of PAR"
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: 
        - name: EditParSummary
          in: body
          required: true
          description: Enter PAR Summary Details to Update
          schema:
            $ref: "#/definitions/update_parsummary_request"
        
      responses:
        200:
          description: New Password sent to registered email
        400:
          description: Bad Request
        401:
          description: Unauthorized error
        500:
          description: Internal Server

definitions:
      
  # Request Section
  searchvendors_request:
    type: object
    properties:
      vendor_id:
        type: "integer"
      vendorname:
        type: "string"
      region:
        type: "string"
      postalcode:
        type: "string"
      state: 
        type: "string"
    example:
      vendorid: 2225
      vendorname: "All Star"
      region: "3"
      postalcode: "72117"
      state: "AR"
  
  vendoradditionalinfo_request:
    type: object
    properties:
      legalname:
        type: "string"
      dba:
        type: "string"
      dateincorporated:
        type: "string"
      stateincorporated:
        type: "string"
      websiteurl:
        type: "string"
      taxidtype:
        type: "string"
      taxidnumber:
        type: "string"
      vendorstatus:
        type: "boolean"
      totaltrucks:
        type: "string"
      impoundservice:
        type: "boolean"
      heavydutyservice:
        type: "boolean"
      indoorstorage: 
        type: "boolean"
      reposoftware:
        type: "string"
      repoassociation1:
        type: "boolean"
      repoassociation2:
        type: "boolean"
      lpr:
        type: "string"
      gps:
        type: "string"
      womenownedbusiness: 
        type: "boolean"
      minorityownedbusiness:
        type: "boolean"
      platinumcompliance: 
        type: "boolean"
    example:
      legalname: ""
      dba: ""
      dateincorporated: "8/21/1991"
      stateincorporated: ""
      vendorstatus: "Y"
      websiteurl: ""
      taxidtype: ""
      taxidnumber: ""
      totaltrucks: ""
      impoundservice: "Y"
      heavydutyservice: "N"
      indoorstorage: "Y"
      reposoftware: ""
      repoassociation1: ""
      repoassociation2: ""
      lpr: ""
      gps: ""
      womenownedbusiness: "Y"
      minorityownedbusiness: "N"
      platinumcompliance: "Y"

  addvendoremployee_request:
    type: object
    properties:
      vendor_id:
        type: "integer"
      first_name:
        type: "string"
      middle_name:
        type: "string"
      last_name:
        type: "string"
      employee_type: 
        type: "string"
      bc_check_date:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      state: 
        type: "string"
      zip: 
        type: "string"
      created_by:
        type: "string"

    example:
      vendor_id: 68
      first_name: "Peter"
      middle_name: "K"
      last_name: "Han"
      employee_type: "Driver"
      bc_check_date: "01/01/2018"
      address: "941 HWY 61, Suite 1010 Vicksburg, MS 39183"
      city: "NY"
      state: "DC"
      zip: "688676"
      created_by: "Marc"
      
  addvendor_request:
    type: object
    properties:
      vendor_name:
        type: string
      vendor_address:
        type : string
      phone_number:
        type: string

  addadditionallocation_request:
    type: object
    properties:
      locationid:
        type: integer
      hoursofoperation:
        type : integer
      redemption:
        type: string
      afterhoursphone:
        type: string
      fencingavailable:
        type : integer
      fencing:
        type: string
      securitycamera:
        type: string


  # deletevendoremployee_request:
  #   type: object
  #   properties:
  #     employee_id:
  #       type: "integer"
  #   example:
  #     employee_id: 5b3659bf688648b2b0207d8b

  
  updatevendoremployee_request:
    type: object
    properties:
      first_name:
        type: "string"
      middle_name:
        type: "string"
      last_name:
        type: "string"
      employee_type: 
        type: "string"
      bc_check_date:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      state: 
        type: "string"
      zip: 
        type: "string"
      updated_by:
        type: "string"

    example:
      first_name: "Peter"
      middle_name: "K"
      last_name: "Han"
      employee_type: "Driver"
      bc_check_date: "01/01/2018"
      address: "941 HWY 61, Suite 1010 Vicksburg, MS 39183"
      city: "NY"
      state: "DC"
      zip: "688676"
      updated_by: "Vendor"

  # userRequest:
  #   type: object
  #   properties:
  #     first_name:
  #       type: "string"
  #     last_name:
  #       type: "string"
  #     email:
  #       type: "string"
  #     password:
  #       type: "string"
  #     middle_name:
  #       type: "string"
  #     role:
  #       type: "string"
  #       enum: [PAR_EMPLOYEE, PAR_MANAGER, Vendor]
  #   example:
  #     first_name: "firstname_dummy"
  #     last_name: "lastname_dummy"
  #     middle_name: "middlename_dummy"
  #     email: "XXX@miraclesoft.com"
  #     password: "password123"
  #     role: "PAR_EMPLOYEE"

  loginUserRequest:
    type: object
    properties:
      email:
        type: "string"
      password:
        type: "string"
    example:
      emailID: "QAC1@adesa.com"
      password: "par123"

  addlocationdocument_request:
    type: object
    properties:
      vendor_id:
        type: integer
      location_id:
        type: integer
      document_type:
        type: string
      document_name:
        type: string
      location_type:
        type: string
      inspection_date:
        type: string
      location_name:
        type: string
      document_link:
        type: string
      created_by:
        type: string
      updated_by:
        type: string
      expiration_date:
        type: string
      inspection_done_by:
        type: string
      pic_description:
        type: string
      filename:
        type: string
    example:
      vendor_id: 68
      location_id: 2
      document_type: "LOC_PIC"
      document_name:  "Picture of Fencing, Security Camera"
      location_type: ""
      inspection_date: "01/01/2019"
      location_name: ""
      document_link: ""
      created_by: ""
      updated_by: ""
      expiration_date: ""
      inspection_done_by: ""
      pic_description: ""
      filename: ""

  updatelocationdocument_request:
    type: object
    properties:
      inspection_date:
        type: string
      location_name:
        type: string
      document_link:
        type: string
      updated_by:
        type: string
      expiration_date:
        type: string
      pic_description:
        type: string
      filename:
        type: string
      inspection_done_by:
        type: string

    example:
      inspection_date: "01/01/2019"
      location_name: "NY"
      document_link: ""
      updated_by: ""
      expiration_date: "01/01/2020"
      pic_description: ""
      filename: ""
      inspection_done_by: "Marc"

  # deletelocationdocument_request:
  #   type: object
  #   properties:
  #     _id:
  #       type: string
  #   example:
  #     _id: "5b368c47f09327001adb64ac"

  addvendorlicensedocument_request:
    type: object
    properties:
      vendorid:
        type: integer
      issuestate:
        type: string
      issuedate:
        type: string
      expirationdate:
        type: string
      documentType:
        type: string
      documentName:
        type: string
      filename:
        type: string
      uploadDate:
        type: string
      documentLink:
        type: string
    example:
      vendorid: 68
      issuestate: "MC"
      issuedate: "01/01/2018"
      expirationdate: "01/01/2018"
      documentType: "AGT_COL"
      documentName: "Collection License"
      filename: "license.jpg"
      uploadDate: "01/02/2019"
      documentLink: "C://fakepath/license.jpg"

  updatevendorlicensedocument_request:
    type: object
    properties:
      issuestate:
        type: string
      issuedate:
        type: string
      expirationdate:
        type: string
      documentType:
        type: string
      documentName:
        type: string
      filename:
        type: string
      uploadDate:
        type: string
      documentLink:
        type: string
    example:
      issuestate: "NY"
      issuedate: "01/01/2018"
      expirationdate: "01/01/2018"
      documentType: "AGT_COL"
      documentName: "Collection License"
      filename: "license.jpg"
      uploadDate: "01/02/2019"
      documentLink: "C://fakepath/license.jpg"

  # deletevendorlicensedocument_request:
  #   type: object
  #   properties:
  #     docid: 
  #       type: "string"
  #   example:
  #     docid: "5b3cab832c8f3f9cf8673418"

  addinsurancedocument_request:
    type: object
    properties:
      vendorid: 
        type: integer
      policynum:
        type: integer
      phonenum:
        type : integer
      contact:
        type: integer
      insurancevendor:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postalcode:
        type: string
      expiration:
        type: string
      auto_liability_expiration:
        type : string
      general_liability_occurance:
        type: string
      general_liability_aggregate:
        type: string
      wrongfull_liability_limit:
        type: string
      workmas_comp_liability_limit:
        type: string
      onhookormotor_liability_limit:
        type: string
      auto_liability_limit:
        type: string
      garage_liability_limit:
        type: string
      cancellation_notice:
        type: string
      storage_location:
        type: string
      par_as_insured:
        type: string
      documenttype:
        type: string
      documentcode:
        type: string
      filename:
        type: string
      documentlink:
        type: string
      exempt_check :
        type: integer
    example:
      vendorid: 68
      policynum: ""
      phonenum: ""
      contact: ""
      insurancevendor: ""
      address1: ""
      address2: ""
      city: ""
      state: ""
      postalcode: ""
      expiration: ""
      auto_liability_expiration : ""
      general_liability_occurance: ""
      general_liability_aggregate: ""
      wrongfull_liability_limit: ""
      workmas_comp_liability_limit: ""
      onhookormotor_liability_limit: ""
      auto_liability_limit: ""
      garage_liability_limit: ""
      cancellation_notice: ""
      storage_location: "N"
      par_as_insured: "Y"
      documenttype: ""
      documentcode: ""
      filename: ""
      documentlink: ""
      exempt_check : 0

  updateinsurancedocument_request:
    type: object
    properties:
      policynum:
        type: string
      phonenum:
        type: string
      contact:
        type: string
      insurancevendor:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postalcode:
        type: number
      expiration:
        type: string
      general_liability_occurance:
        type: number
      general_liability_aggregate:
        type: number
      wrongfull_liability_limit:
        type: number
      workmas_comp_liability_limit:
        type: number
      onhookormotor_liability_limit:
        type: number
      auto_liability_limit:
        type: number
      garage_liability_limit:
        type: number
      cancellation_notice:
        type: string
      storage_location:
        type: boolean
      par_as_insured:
        type: boolean
      documenttype:
        type: string
      documentcode:
        type: string
      filename:
        type: string
      documentlink:
        type: string
      delete:
        type: number
    example:
      policynum: "jndsj54"
      phonenum: "8848454"
      contact: "jdnjcadj"
      insurancevendor: "dkjcbjk"
      address1: "kjadkc"
      address2: "knd"
      city: "kd"
      state: "CA"
      postalcode: "74185"
      expiration: "7/20/2019"
      general_liability_occurance: 0
      general_liability_aggregate: 0
      wrongfull_liability_limit: 0
      workmas_comp_liability_limit: 555
      onhookormotor_liability_limit: 0
      auto_liability_limit: 0
      garage_liability_limit: 0
      cancellation_notice: 0
      storage_location: true
      par_as_insured: false
      documenttype: ""
      documentcode: ""
      filename: ""
      documentlink: ""
      delete: 0


  deleteinsurancedocument_request:
    type: object
    properties:
      docid:
        type: string

  addduediligencedocument_request:
    type: object
    properties:
      MasterVendorId:
        type: number
      DocumentTypeCode:
        type: string 
      OwnerName:
        type: string
      DateSigned:
        type: string
      LicenseNumber:
        type: string
      IssueDate:
        type: string
      ExpirationDate:
        type: string
      EINOrSSN:
        type: string
      FileName:
        type: string
      DocumentLink:
        type: string
      IssueState:
        type: string
    example:
      MasterVendorId: "68"
      DocumentTypeCode: "AGT_W9F"
      OwnerName: ""
      DateSigned: ""
      LicenseNumber: ""
      IssueDate: ""
      ExpirationDate: ""
      EINOrSSN: "756"
      FileName: "flight.jpg"
      DocumentLink: "Vendor/68/duediligence/AGT_W9F/2018-0705T18:59:15.261Z/flight.jpg"
      IssueState: ""  
  
  updateduediligencedocument_request:
    type: object
    properties:
      MasterVendorId:
        type: number
      DocumentTypeCode:
        type: string 
      OwnerName:
        type: string
      DateSigned:
        type: string
      LicenseNumber:
        type: string
      IssueDate:
        type: string
      ExpirationDate:
        type: string
      EINOrSSN:
        type: string
      FileName:
        type: string
      DocumentLink:
        type: string
      IssueState:
        type: string
    example:
      MasterVendorId: "68"
      DocumentTypeCode: "AGT_W9F"
      OwnerName: ""
      DateSigned: ""
      LicenseNumber: ""
      IssueDate: ""
      ExpirationDate: ""
      EINOrSSN: "756"
      FileName: "flight.jpg"
      DocumentLink: "Vendor/68/duediligence/AGT_W9F/2018-0705T18:59:15.261Z/flight.jpg"
      IssueState: ""

  addstaterequirements_request:
    type: object
    properties:
      StateCode:
        type: string
        example: "WA"
      RepossessionVendor:
        type: object
        properties:
          Licensing:
            type: object
            properties:
              Repossession:
                type: string
                example: "Yes"
              other:
                type: string
                example: "NA"
          VendorBond:
            type: string
            example: "5000"  
          Insurance:
            type: string
            example: "N/A"
          Other:
            type: string
            example: "N/A"
          Identification:
            type: string
            example: "N/A"
          UseOfLicenseplateRecognitionData:
            type: string
            example: "Not regulated"
      PreRepossession:
        type: object
        properties:
          ActionsRequiredBeforeEngagingVendor:
            type: string
            example: "Notice 10 days before or within 5 days of repossession"
          SelfHelp:
            type: string
            example: "Allowed"
          VoluntarySurrenderInformation:
            type: string
            example: "No"
          PoliceNotification:
            type: string
            example: "No"
          UniqueRestrictions:
            type: string
            example: "N/A"
      PostRepossession:
        type: object
        properties:
          PoliceNotification:
            type: string
            example: "1 Hour"
          NoticeOfSeizureToDebtor:
            type: string
            example: "Notice 10 days before or within 5 days of repossession"
          Means:
            type: string
            example: "Registered or certified mail"
          RequiredInformation:
            type: string
            example: "Right to redeem, amount due, rights with respect to and liability upon resale, address where vehicle is stored, place of payment"
          Timing:
            type: string
            example: "5 days"
          Form:
            type: string
            example: "Nonw"
          RightToCureState:
            type: string
            example: "No"
          RightToRedeemreinstate:
            type: string
            example: "5 days"
      PersonalPropertyEffects:
        type: object
        properties:
          Definition:
            type: string
            example: "No specific statutory requirements"
          LicesePlates:
            type: string
            example: "No specific statutory requirements"
          VendorLendorResponsibilities:
            type: string
            example: "No specific statutory requirements"
          PostRepossessionNotice:
            type: string
            example: "No specific statutory requirements"
          Means:
            type: string
            example: "No specific statutory requirements"
          Timing:
            type: string
            example: "No specific statutory requirements"
          Form:
            type: string
            example: "No specific statutory requirements"
          ProofOfRetention:
            type: string
            example: "No specific statutory requirements"
          InventoryRequirements:
            type: string
            example: "No specific statutory requirements"
          Retention:
            type: string
            example: "No specific statutory requirements"
          Storage:
            type: string
            example: "No specific statutory requirements"
          TimePeriod:
            type: string
            example: "No specific statutory requirements"
          Disposal:
            type: string
            example: "No specific statutory requirements"
          PreDisposalNotice:
            type: string
            example: "No specific statutory requirements"
          AllowedMeans:
            type: string
            example: "No specific statutory requirements"
      VehicleSaleDisposal:
        type: object
        properties:
          PublicVsPrivate:
            type: string
            example: "Public if buyer has paid 50% of cash sale price"
          SaleNoticeRequires:
            type: string
            example: "Yes"
          NoticePeriod:
            type: string
            example: "10 days in nonconsumer transaction"
          Means:
            type: string
            example: "Reasonable"
          ForPublicSaleStates  :
            type: string
            example: "Given form, yes"
          Form:
            type: string
            example: "Form language provided, but not required"
          VehicleTitleLaws:
            type: string
            example: "Title application within 5 days of repossession"
      StorageFees:
        type: object
        properties:
          Vehicle:
            type: string
            example: "Allowed up to $3/day, not to exceed $100"
          PersonalProperty:
            type: string
            example: "No specific statutory requirements"
          FeeCollection:
            type: string
            example: "Statute provides for lender application of reasonable expenses incurred"
          LenderApplicationOfExpenses:
            type: string
            example: "Lender shall apply cash proceeds of disposition first to reasonable expenses incurred"
      
  updatestaterequirements_request:
      type: object
      properties:
        RepossessionVendor:
          type: object
          properties:
            Licensing:
              type: object
              properties:
                Repossession:
                  type: string
                  example: "Yes"
                other:
                  type: string
                  example: "NA"
            VendorBond:
              type: string
              example: "5000"  
            Insurance:
              type: string
              example: "N/A"
            Other:
              type: string
              example: "N/A"
            Identification:
              type: string
              example: "N/A"
            UseOfLicenseplateRecognitionData:
              type: string
              example: "Not regulated"
        PreRepossession:
          type: object
          properties:
            ActionsRequiredBeforeEngagingVendor:
              type: string
              example: "Notice 10 days before or within 5 days of repossession"
            SelfHelp:
              type: string
              example: "Allowed"
            VoluntarySurrenderInformation:
              type: string
              example: "No"
            PoliceNotification:
              type: string
              example: "No"
            UniqueRestrictions:
              type: string
              example: "N/A"
        PostRepossession:
          type: object
          properties:
            PoliceNotification:
              type: string
              example: "1 Hour"
            NoticeOfSeizureToDebtor:
              type: string
              example: "Notice 10 days before or within 5 days of repossession"
            Means:
              type: string
              example: "Registered or certified mail"
            RequiredInformation:
              type: string
              example: "Right to redeem, amount due, rights with respect to and liability upon resale, address where vehicle is stored, place of payment"
            Timing:
              type: string
              example: "5 days"
            Form:
              type: string
              example: "Nonw"
            RightToCureState:
              type: string
              example: "No"
            RightToRedeemreinstate:
              type: string
              example: "5 days"
        PersonalPropertyEffects:
          type: object
          properties:
            Definition:
              type: string
              example: "No specific statutory requirements"
            LicesePlates:
              type: string
              example: "No specific statutory requirements"
            VendorLendorResponsibilities:
              type: string
              example: "No specific statutory requirements"
            PostRepossessionNotice:
              type: string
              example: "No specific statutory requirements"
            Means:
              type: string
              example: "No specific statutory requirements"
            Timing:
              type: string
              example: "No specific statutory requirements"
            Form:
              type: string
              example: "No specific statutory requirements"
            ProofOfRetention:
              type: string
              example: "No specific statutory requirements"
            InventoryRequirements:
              type: string
              example: "No specific statutory requirements"
            Retention:
              type: string
              example: "No specific statutory requirements"
            Storage:
              type: string
              example: "No specific statutory requirements"
            TimePeriod:
              type: string
              example: "No specific statutory requirements"
            Disposal:
              type: string
              example: "No specific statutory requirements"
            PreDisposalNotice:
              type: string
              example: "No specific statutory requirements"
            AllowedMeans:
              type: string
              example: "No specific statutory requirements"
        VehicleSaleDisposal:
          type: object
          properties:
            PublicVsPrivate:
              type: string
              example: "Public if buyer has paid 50% of cash sale price"
            SaleNoticeRequires:
              type: string
              example: "Yes"
            NoticePeriod:
              type: string
              example: "10 days in nonconsumer transaction"
            Means:
              type: string
              example: "Reasonable"
            ForPublicSaleStates  :
              type: string
              example: "Given form, yes"
            Form:
              type: string
              example: "Form language provided, but not required"
            VehicleTitleLaws:
              type: string
              example: "Title application within 5 days of repossession"
        StorageFees:
          type: object
          properties:
            Vehicle:
              type: string
              example: "Allowed up to $3/day, not to exceed $100"
            PersonalProperty:
              type: string
              example: "No specific statutory requirements"
            FeeCollection:
              type: string
              example: "Statute provides for lender application of reasonable expenses incurred"
            LenderApplicationOfExpenses:
              type: string
              example: "Lender shall apply cash proceeds of disposition first to reasonable expenses incurred"
  addparinsurance_request:
    type: object
    properties:
      insurancevendor:
        type: string
      policynum:
        type: string
      expiration:
        type: string
      phonenum:
        type: string
      contact:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postalcode:
        type: string
      general_liability_occurance:
        type: integer
      workmas_comp_liability_limit:
        type: integer
      auto_liability_limit:
        type: integer
      garage_liability_limit:
        type: integer
      cancellation_notice:
        type: integer
      eo_cyber:
        type: integer
      crimefidelity:
        type: integer
      documenttypecode:
        type: string
      documenttypename:
        type: string
      filename:
        type: string
      documentlink:
        type: string

    example:
      insurancevendor: "American Recovery Specialist - 68 - Charlotte NC"
      policynum: "AMRH7653568986"
      expiration: "1/2/2019"
      phonenum: "912-595-6200"
      contact: "American 68"
      address1: "353N Clark St 11th FL"
      address2: ""
      city: "Charlotte"
      state: "NC"
      postalcode: "28266"
      general_liability_occurance: 2000000
      workmas_comp_liability_limit: 1000000
      auto_liability_limit: 2000000
      garage_liability_limit: 2000000
      cancellation_notice: 60
      eo_cyber: 5000000
      crimefidelity: 10000000
      documenttypecode: "PAR_EAO"
      documenttypename: "Errors and Omissions"
      filename: "par_insurance.pdf"
      documentlink: "PAR/INSURANCE/par_insurance.pdf"

  updateparinsurance_request:
    type: object
    properties:
      docid:
        type: string
      insurancevendor:
        type: string
      policynum:
        type: string
      expiration:
        type: string
      phonenum:
        type: string
      contact:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postalcode:
        type: integer
      general_liability_occurance:
        type: integer
      workmas_comp_liability_limit:
        type: integer
      auto_liability_limit:
        type: integer
      garage_liability_limit:
        type: integer
      cancellation_notice:
        type: integer
      eo_cyber:
        type: integer
      crimefidelity:
        type: integer
      documenttypecode:
        type: string
      documenttypename:
        type: string
      filename:
        type: string
      documentlink:
        type: string

    example:
      docid: "5b46148d6596a62248afa36b"
      insurancevendor: "American Recovery Specialist - 68 - Charlotte NC"
      policynum: "AMRH7653568986"
      expiration: "1/2/2019"
      phonenum: "912-595-6200"
      contact: "American 68"
      address1: "353N Clark St 11th FL"
      address2: ""
      city: "Charlotte"
      state: "NC"
      postalcode: 28266
      general_liability_occurance: 2000000
      workmas_comp_liability_limit: 1000000
      auto_liability_limit: 2000000
      garage_liability_limit: 2000000
      cancellation_notice: 60
      eo_cyber: 5000000
      crimefidelity: 10000000
      documenttypecode: "PAR_EAO"
      documenttypename: "Errors and Omissions"
      filename: "par_insurance.pdf"
      documentlink: "PAR/INSURANCE/par_insurance.pdf"

  addparemployee_request:
    type: object
    properties:
      employee_id:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      role:
        type: "string"
      hire_date:
        type: "string"
    example:
      employee_id: "emp"
      first_name: "Jacob"
      last_name: "Kay"
      hire_date: "05/22/2017"
      role: "Driver"

  updateparemployee_request:
    type: object
    properties:
      employee_id:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      hire_date:
        type: "string"
      role:
        type: "string"
    example:
      employee_id: "emp_1"
      first_name: "Jacob"
      last_name: "Kay"
      hire_date: "05/22/2017"
      role: "Driver"

  addparlicense_request:
    type: object
    properties:
      document_type_code:
        type: string
      document_type_name:
        type: string
      file_name:
        type: string
      expiration_date:
        type: string
      document_link:
        type: string
      issue_date:
        type: string
      issue_state:
        type: string
      license_number:
        type: string
      upload_date:
        type: string
    example:
      document_type_code: "PAR_SL"
      document_type_name: "State License"
      file_name: "license.pdf"
      expiration_date: "08/08/2019"
      document_link: "C://fakepath/license.pdf"
      issue_date: "07/16/2018"
      issue_state: "NY"
      license_number: "LIC001"
      upload_date: "07/16/2018"
 
  updateparlicense_request:
    type: object
    properties:
      docid:
        type: string
      document_type_code:
        type: string
      document_type_name:
        type: string
      file_name:
        type: string
      expiration_date:
        type: string
      document_link:
        type: string
      issue_date:
        type: string
      issue_state:
        type: string
      license_number:
        type: string
      upload_date:
        type: string
    example:
      docid: "5b4cd1883f932f3b5c644309"
      document_type_code: "PAR_SL"
      document_type_name: "State License"
      file_name: "license.pdf"
      expiration_date: "08/08/2019"
      document_link: "C://fakepath/license.pdf"
      issue_date: "07/16/2018"
      issue_state: "NY"
      license_number: "LIC001"
      upload_date: "07/16/2018"

  addparemployeedoc_request:
    type: object
    properties:
      employee_id:
        type: string
      document_type_code:
        type: string
      document_type_name:
        type: string
      file_name:
        type: string
      expiration_date:
        type: string
      document_link:
        type: string
      issue_date:
        type: string
      completion_date:
        type: string
      uploaded_date:
        type: string
    example:
      employee_id: ""
      document_type_code: "PAR_RED"
      document_type_name: "KAR Red Flag Training"
      file_name: "empdoc.pdf"
      expiration_date: "08/08/2020"
      document_link: "C://fakepath/empdoc.pdf"
      issue_date: "01/01/2019"
      completion_date: "12/12/2018"
      uploaded_date: "07/18/2018"

  updateparemployeedoc_request:
    type: object
    properties:
      file_name:
        type: string
      expiration_date:
        type: string
      document_link:
        type: string
      issue_date:
        type: string
      completion_date:
        type: string
      uploaded_date:
        type: string
    example:
      file_name: "empdoc1.pdf"
      expiration_date: "08/08/2020"
      document_link: "C://fakepath/empdoc1.pdf"
      issue_date: "01/01/2019"
      completion_date: "12/12/2018"
      uploaded_date: "07/18/2018"

  changelogs_request:
    type: object
    properties:
      vendor_id:
        type: integer
      document_type:
        type: string
      document_category:
        type: string
      transaction_type:
        type: string
      modified_by:
        type: string
    example:
      vendor_id : 1
      document_type: "CARS Certification for employees"
      document_category: "VendorEMPLOYEE"
      transaction_type: "Delete"
      modified_by: "PAR"
    
  addparduediligence_request:
    type: object
    properties:
      issue_date:
        type: string
      document_type_code:
        type: string
      document_type_name:
        type: string
      expiration_date:
        type: string
      file_name:
        type: string
      document_link:
        type: string
      created_by:
        type: string
      updated_by:
        type: string
    example:
      issue_date: "07/25/2018"
      document_type_code: "PAR_W9F"
      document_type_name: "W-9 form"
      expiration_date: "07/26/2018"
      file_name: "file1.pdf"
      document_link: "PAR/file1.pdf"
      created_by: "Madhu"
      updated_by: "Madhu"


  updateparduediligence_request:
    type: object
    properties:
      issue_date:
        type: string
      expiration_date:
        type: string
      file_name:
        type: string
      document_link:
        type: string
      updated_by:
        type: string
    example:
      issue_date: "07/25/2018"
      expiration_date: "07/26/2018"
      file_name: "file1.pdf"
      document_link: "PAR/file1.pdf"
      updated_by: "Madhu"



  # Response section
  searchvendors_response_200:
    type: object
    properties:
      Status: 
        type: "string"
      vendors:
        type: "array"
        items:
          $ref: "#/definitions/searchvendors_response_200_vendorsItems"
    example:
      Status: "200"
      vendors:
      - id: "5b102950ab94d40ce4d82ee4"
        MasterVendorId: 61
        Vendorname: "American Lenders - 61 - Manchester CT"
        RegionId: 4
        State: "CT"
        PostalCode: 6045
  searchvendors_response_200_vendorsItems:
    type: object
    properties:
      id: 
        type: "string"
      MasterVendorId:
        type: "integer"
      Vendorname:
        type: "string"
      RegionId:
        type: "integer"
      State:
        type: "string"
      PostalCode:
        type: "integer"
  # getemployees_response_200:
  #   type: object
  #   properties:
  #     FIRST_NAME: 
  #       type: "string"
  #     LAST_NAME:
  #       type: "string"
  #     MIDDLE_NAME:
  #       type: "string"
  #     EMAIL:
  #       type: "string"
  #     ROLE:
  #       type: "string"
  #   example:
  #     FIRST_NAME: "firstname_dummy"
  #     LAST_NAME: "lastname_dummy"
  #     MIDDLE_NAME: "middlename_dummy"
  #     EMAIL: "XXX@miraclesoft.com"
  #     ROLE: "PAR_EMPLOYEE"

  loginUser_response_200:
   type: object
   properties:
      JWTtoken: 
        type: "string"
      Xid:
        type: "string"
      Firstname:
        type: "string"
      Lastname:
        type: "string"
      Middlename:
        type: "string"
      LoginId:
        type: "string"
      Role:
        type: "string"
      Info: 
        type: "string"
   example:
      JWTtoken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbElEIjoiUUFDMUBhZGVzYS5jb20iLCJwYXNzd29yZCI6InBhcjEyMyIsImlhdCI6MTUzMDgwMDA5OCwiZXhwIjoxNTMwODAwMDk4fQ.SjsBs_PmEhgYz6oqbhpDjn3dpmNj-aX5qkqaX30Lym0"
      Xid: "0732f04d-8928-4bb9-88ee-cbf4c17cef50"
      Firstname: "QAC1"
      Lastname: "QAC1"
      Middlename: "QAC1"
      LoginId: "QAC1@adesa.com"
      Role: "QAC1"
      Info: "Login successful"

  addvendoremployee_response_200:
    type: object
    properties:
      Info: 
        type: "string"
    example:
      Info: "Vendor Employee Created"

  getvendoremployeedocs_response_200:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        CreatedTimeStamp:
          type: string
        LastUpdatedTimeStamp:
          type : string
        MasterVendorId:
          type : integer
        EmployeeId:
          type : integer
        DocumentTypeCode:
          type : string
        DocumentTypeName:
          type : string
        DocumentLink:
          type : string
        FileName:
          type : string
        ExpirationDate:
          type : string
        IssueDate:
          type : string
        UploadedTimeStamp:
          type : string
        CreatedBy:
          type : string
      
  updatevendoremployeedocument:
    type: object
    properties:
      expiry_dtm:
        type: "string"
      completion_dtm:
        type: "string"
      issue_dtm:
        type: "string"
      document_link:
        type: "string"
      file_name:
        type: "string"
    example:
      expiry_dtm: "03/03/2020"
      completion_dtm: "03/03/2020"
      issue_dtm: "02/02/2020"
      document_link: "Vendor/69/employeedocument/AGT_EMP/2018-06-29T20:05:53.492Z/msTestingDoc.docx"
      file_name : "msTestingDoc"

  addvendoremployeedocument_request:
    type: object
    properties:
      vendor_id:
        type: "integer"
      employee_id:
        type: "integer"
      document_type_code:
        type: "string"
      document_type_name:
        type: "string"
      document_link:
        type: "string"
      file_name:
        type: "string"
      expiry_dtm:
        type: "string"
      completion_dtm:
        type: "string"
      issue_dtm:
        type: "string"
      uploaded_dtm:
        type: "string"
      created_by:
        type: "string"
    
    example:
      vendor_id: 68
      employee_id: 2
      document_type_code: "AGT_OFAC"
      document_type_name: "OFAC"
      document_link: ""
      file_name: ""
      expiry_dtm: "01/01/2019"
      completion_dtm: "01/01/2019"
      issue_dtm: "12/12/2018"
      uploaded_dtm: ""
      created_by: "Vendor"
        
  # deletevendoremployeedocument_request:
  #   type: object
  #   properties:
  #     docid:
  #       type: "string"
  #   example:
  #     docid: "5b365d59447e1a4aac640ec7"

  states_response_200:
    type: array
    items:
      properties:
        Name:
          type: string
        Code:
          type: string
  getregion_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        region:
          type: string
        states:
          type: array
          items:
            properties:
              code:
                type: string
              name:
                type: string

  documenttypes_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        Category:
          type: string
        CompliantDocument:
          type: string
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        PlatinumCompliant:
          type: string
          
  getvendoremployees_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        Address1:
          type: string
        MasterVendorId:
          type: integer
        BackgroundCheckCompletionDate:
          type: string
        City:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        EmployeeId:
          type: string
        EmployeeType:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        LastUpdatedBy:
          type: string
        LastUpdatedTimeStamp:
          type: string
        MiddleName:
          type: string
        PostalCode:
          type: string
        State:
          type: string
        __v:
          type: integer
        
  vendordetails_response_200:
    type: object
    properties:
        Status:
          type: string
        vendorId:
          type: integer
        name:
          type: string
        address_1:
          type: integer
        address_2:
          type: string
        city:
          type: string
        state:
          type: string
        postalcode:
          type: string
        contact:
          type: string
        phone_number:
          type: string
        fax_number:
          type: string
        mobile_number:
          type: string
        email:
          type: string
        secondary_email:
          type: string
        repo_software:
          type: string
        heavydutyservice_flg:
          type: string
        impoundservice_flg:
          type: string
        regionId:
          type: integer
        vendor_owner_name:
          type: string
        vendor_owner_email:
          type: string
        vendor_owner_contact_number:
          type: string
        incorporated_dtm:
          type: string
        state_incorporated_dtm:
          type: string
        taxId:
          type: string
        taxId_number:
          type: string
        total_tow_trucks_owned:
          type: string
        website_url:
          type: string
        women_owned:
          type: string
        minority_owned:
          type: string
        indoor_storage_available:
          type: string
        lpr:
          type: string
        platinum_compliant:
          type: string
        gps:
          type: string
        
  # vendorslocations_response_200:
  #   type: object
  #   properties:
  #     Info:
  #       type: string
  #     VendorLocationDetails:
  #       type: array
  #       items:
  #         properties:
  #           _id:
  #             type: string
  #           Address1:
  #             type: string
  #           Address2:
  #             type: string
  #           AfterHoursPhone:
  #             type: string
  #           MasterVendorId:
  #             type: integer
  #           City:
  #             type: string
  #           County:
  #             type: string
  #           CreatedBy:
  #             type: string
  #           CreatedTimeStamp:
  #             type: string
  #           FaxNumber:
  #             type: integer
  #           Fencing:
  #             type: string
  #           FencingType:
  #             type: string
  #           HoursOfOperation:
  #             type: string
  #           IndoorStorage:
  #             type: string
  #           LocationId:
  #             type: integer
  #           LocationName:
  #             type: string
  #           LocationType:
  #             type: string
  #           ManagerName:
  #             type: string
  #           OfficePhone:
  #             type: string
  #           PostalCode:
  #             type: integer
  #           RedemptionHours:
  #             type: string
  #           TransportationHours:
  #             type: string
  #           SecurityCamera:
  #             type: string
  #           SiteInspection:
  #             type: string
  #           State:
  #             type: string
  #           UpdatedBy:
  #             type: string
  #           UpdatedTimeStamp:
  #             type: string
              
  getalllicensedocs_response_200:
    type: array
    items:
      properties:
        IsDeleted:
          type: integer
        _id:
          type: string
        MasterVendorId:
          type: integer
        VendorLicenseId:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        IssueState:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string
        __v:
          type: integer
        
  addduediligencedocument_response_200:
    type: object
    properties:
      MasterVendorId:
        type: number

  getallparinsurancedocs_response_200:
    type: array
    items:
      properties:
        IsDeleted:
          type: integer
          example: 0
        _id:
          type: string
          example : "5b46148d6596a62248afa36b"
        InsuranceId: 
          type: integer
          example: 1
        DocumentTypeCode:
          type: string
          example: "PAR_COI"
        DocumentTypeName:
          type: string
          example: "Certificate of Insurance"
        FileName:
          type: string
          example: ""
        ExpirationDate:
          type: string
          example : "2018-12-31T18:30:00.000Z"
        UploadedDate:
          type: string
          example : "2018-12-31T18:30:00.000Z"
        DocumentLink:
          type: string
          example : "PAR/INSURANCE/par_insurance.pdf"
        CreatedBy: 
          type: string
          example: "PAR"
        CreatedTimeStamp:   
          type : string
          example : "2018-12-31T18:30:00.000Z"
        UpdatedBy:
          type: string
          example: "PAR"
        UpdatedTimeStamp:
          type: string
          example : "2018-12-31T18:30:00.000Z"
  getparinsurancedoc_response_200:
    type: array
    items:
      properties:
        IsDeleted:
          type: integer
          example : 0
        _id:
          type: string
          example : "5b46148d6596a62248afa36b"
        InsuranceId: 
          type: integer
          example : 1
        DocumentTypeCode:
          type: string
          example: "PAR_COI"
        DocumentTypeName:
          type: string
          example: "Certificate of Insurance"
        FileName:
          type: string
          example : ""
        ExpirationDate:
          type: string
          example : "2018-12-31T18:30:00.000Z"
        UploadedDate:
          type: string
          example : "2018-12-31T18:30:00.000Z"
        DocumentLink:
          type: string
          example : "PAR/INSURANCE/par_insurance.pdf"
        Vendor: 
          type: string
          example : "Mesirow Insurance Services Inc"
        PolicyNumber:
          type: string
          example : "GARH25098985"
        Phone:
          type: string
          example: "312-595-6200"
        Contact:
          type: string
          example: "Darlene Overbee"
        Address1: 
          type: string
          example: "353N Clark St 11th FL"
        Address2:
          type: string
          example : ""
        City:
          type: string
          example : "Chicago"
        State:
          type: string
          example: "IL"
        PostalCode:
          type: integer
          example: 60654
        GeneralLiabilityOccurance:
          type: integer
          example: 200000
        WorkmansCompLiabilityLimit:
          type: integer
          example: 100000
        AutoLiabilityLimit: 
          type: integer
          example: 200000
        GarageLiabilityLimit:   
          type : integer
          example: 100000
        CancellationNotice:
          type: integer
          example: 60
        EOCyber:
          type: integer
          example: 5000000
        CrimeFidelity:
          type: integer
          example: 1000000

  getallparemployees_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        HireDate:
          type: string
        EmploymentType:
          type: string
        Role:
          type: string
        OfficeAddress1:
          type: string
        OfficeAddress2:
          type: string
        City:
          type: string
        State:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string
        EmployeeId:
          type: integer
  
  getparemployeebyid_response_200:
    type: object
    properties:
        _id:
          type: string
        FirstName:
          type: string
        MiddleName:
          type: string
        LastName:
          type: string
        HireDate:
          type: string
        EmploymentType:
          type: string
        Role:
          type: string
        OfficeAddress1:
          type: string
        OfficeAddress2:
          type: string
        City:
          type: string
        State:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string
        EmployeeId:
          type: integer

  getallparlicensedocs_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        LicenseId:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        IssueState:
          type: string
        LicenseNumber:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string

  getparlicensedoc_response_200:
    type: object
    properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        LicenseId:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        IssueState:
          type: string
        LicenseNumber:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string
  getallparemployeedocs_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        EmployeeId:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        CompletionDate:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string

  getparemployeedoc_response_200:
    type: object
    properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        EmployeeId:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        CompletionDate:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string

  getallpardueligencedocs_response_200:
    type: array
    items:
      properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string

  getpardueligencedoc_response_200:
    type: object
    properties:
        _id:
          type: string
        IsDeleted:
          type: integer
        DocumentTypeCode:
          type: string
        DocumentTypeName:
          type: string
        FileName:
          type: string
        ExpirationDate:
          type: string
        UploadedTimeStamp:
          type: string
        DocumentLink:
          type: string
        IssueDate:
          type: string
        CreatedBy:
          type: string
        CreatedTimeStamp:
          type: string
        UpdatedBy:
          type: string
        UpdatedTimeStamp:
          type: string
    
  getusers_response_200:
    type: object
    properties:
      Status:
        type: string
      Info:
        type: string
      Users:
        type: array
        items:
          properties:
            _id :
              type: string
            IsActive:
              type: string
            CreatedTimeStamp:
              type: string
            BlockedUser:
              type: string
            Email:
              type: string
            FirstName:
              type: string
            MiddleName:
              type: string
            LastName:
              type: string
            Code:
              type: integer
            Role:
              type: string
  add_user_request:
    type: object
    properties:
      email_id:
        type: string
        example: "abc@gmail.com"
      first_name:
        type: string
        example: "abc"
      last_name:
        type: string
        example: "xyz"
      role:
        type: string
        example: "Client"
      created_by:
        type: string
        example: "PAR"
      
  edit_user_request:
    type: object
    properties:
      first_name:
        type: string
        example: "abc"
      last_name:
        type: string
        example: "xyz"
      role:
        type: string
        example: "Client"
      blocked_user: 
        type: string
        example: "Y"
      updated_by:
        type: string
        example: "PAR"
        
  forgot_password_request:
    type: object
    properties:
      email_id:
        type: string
        example: "abc@gmail.com"

    
  change_password_request:
    type: object
    properties:
      oldpwd:
        type: string
        example: "Xcs^@jdlk,md0"
      newpwd:
        type: string
        example: "Par@123"
        
  getroles_response_200:
    type: object
    properties:
      Status:
        type: string
      Info:
        type: string
      Roles:
        type: array
        items:
          properties:
            _id :
              type: string
            Code:
              type: integer
            Role:
              type: string
            
  
  update_parsummary_request:
    type: object
    properties:
      summary_id:
        type: string
      name:
        type: string
      type:
        type: string
      date_incorporated:
        type: string
      state_incorporated:
        type: string
      address:
        type: string
      phone:
        type: string
      description:
        type: string
      audit_financials:
        type: string
      dunn_and_bradstreet:
        type: string
      taxid:
        type: string
      website:
        type: string
      public_or_private:
        type: string
      compliance_contract:
        type: string
      no_of_employees:
        type: string
      
      